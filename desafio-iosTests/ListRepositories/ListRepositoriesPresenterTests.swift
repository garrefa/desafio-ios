//
//  ListRepositoriesPresenterTests.swift
//  desafio-ios
//
//  Created by Cicero Camargo on 08/04/17.
//  Copyright (c) 2017 Stationfy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import desafio_ios
import XCTest

class ListRepositoriesPresenterTests: XCTestCase {

    // MARK: - Subject under test
    
    var presenter: DefaultListRepositoriesPresenter!

    // MARK: - Test doubles
    var viewControllerMock: ListRepositoriesViewControllerMock!
    
    // MARK: - Test lifecycle
    
    override func setUp() {
        super.setUp()
        viewControllerMock = ListRepositoriesViewControllerMock()
        presenter = DefaultListRepositoriesPresenter()
        presenter.viewController = viewControllerMock
    }
    
    // MARK: - Tests
    
    func testPresentRepositories_reloading_withMoreEntries() {
        _testPresentRepositories_reloading(hasMoreEntries: true)
    }
    
    func testPresentRepositories_reloading_noMoreEntries() {
        _testPresentRepositories_reloading(hasMoreEntries: false)
    }
    
    private func _testPresentRepositories_reloading(hasMoreEntries: Bool) {
        let repositories = [Repository.example()]
        presenter.presentRepositories(repositories, shouldAppend: false, hasMore: hasMoreEntries)
        guard let viewModel = viewControllerMock.latestViewModelDisplayed else {
            XCTFail("viewController should have been requested to display a new ViewModel")
            return
        }
        XCTAssertEqual(viewModel.repositories.count, repositories.count,
                       "viewController received an unexpected number of new repositories to show")
        XCTAssertEqual(viewModel.shouldShowLoadMore, hasMoreEntries,
                       "viewController received a unexpected value for `shouldShowLoadMore` parameter")
    }
    
    func testPresentRepositories_appending_withMoreEntries() {
        _testPresentRepositories_appending(hasMoreEntries: true)
    }
    
    func testPresentRepositories_appending_noMoreEntries() {
        _testPresentRepositories_appending(hasMoreEntries: false)
    }
    
    private func _testPresentRepositories_appending(hasMoreEntries: Bool) {
        let repositories = [Repository.example()]
        presenter.presentRepositories(repositories, shouldAppend: true, hasMore: hasMoreEntries)
        guard let latestUpdateViewModelData = viewControllerMock.latestUpdateViewModelData else {
            XCTFail("viewController should have been requested to update its ViewModel data")
            return
        }
        XCTAssertEqual(latestUpdateViewModelData.repositories.count, repositories.count,
                       "viewController received an unexpected number of new repositories to show")
        XCTAssertEqual(latestUpdateViewModelData.shouldShowLoadMore, hasMoreEntries,
                       "viewController received a unexpected value for `shouldShowLoadMore` parameter")
    }
    
    func testPresentRequestError() {
        presenter.presentRequestError(anyError())
        XCTAssert(viewControllerMock.didPresentAlert,
                  "viewController should have presented an alert notifying the user about the error")
    }
}
