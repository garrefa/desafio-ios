//
//  DefaultListRepositoriesPresenter.swift
//  desafio-ios
//
//  Created by Cicero Camargo on 08/04/17.
//  Copyright (c) 2017 Stationfy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import Foundation

/// Prepares data for presentation in ListRepositoriesViewController
class DefaultListRepositoriesPresenter: ListRepositoriesPresenter {
    
	weak var viewController: ListRepositoriesViewControllerInput!
  
	// MARK: - Presentation logic
    
    func presentRepositories(_ repositories: [Repository], shouldAppend: Bool, hasMore: Bool) {
        let repositoryViewModels = repositories.map { ListRepositories.ViewModel.Repository(repository: $0) }
        if shouldAppend {
            viewController.updateViewModel(with: repositoryViewModels, shouldShowLoadMore: hasMore)
        } else {
            let viewModel = ListRepositories.ViewModel(repositories: repositoryViewModels, shouldShowLoadMore: hasMore)
            viewController.displayViewModel(viewModel)
        }
    }
    
    func presentRequestError() {
        viewController.presentDismissableAlert(title: "Error",
                                               message: "An unexpected error happened",
                                               dismissActionTitle: "OK")
    }
}

extension ListRepositories.ViewModel.Repository {
    
    init(repository: Repository) {
        // TODO: implement this
    }
}
