//
//  DefaultListRepositoriesInteractor.swift
//  desafio-ios
//
//  Created by Cicero Camargo on 08/04/17.
//  Copyright (c) 2017 Stationfy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import Foundation

/// Implements the business logic behind the events that come from ListRepositoriesViewController
class DefaultListRepositoriesInteractor: ListRepositoriesInteractor {

    var presenter: ListRepositoriesPresenter!
    
    private let repositoryService: RepositoryService
    
    init(repositoryService: RepositoryService) {
        self.repositoryService = repositoryService
    }
    
    // MARK: - Business logic
    
    func loadInitialRepositories() {
        repositoryService.findRepositories(
            language: .java,
            sortBy: SortMethod(key: .stars, direction: .descending),
            page: 0,
            onCompletion: { repositories, hasMorePages in
                                            
            },
            onError: { error in
            }
        )
    }
    
    func loadMoreRepositories() {
        repositoryService.findRepositories(
            language: .java,
            sortBy: SortMethod(key: .stars, direction: .descending),
            page: 0,
            onCompletion: { repositories, hasMorePages in
                
        },
            onError: { error in
        }
        )
    }
}
